apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  serviceAccount: server
  selector:
    matchLabels:
      app: goserver
  replicas: 3
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "brunostel/hello-go:v10"

          resources:
            requests: #Minimo de recursos necessários para UM POD
              cpu: 100m # 1000m = 1vCPU
              memory: 20Mi
            limits: #Máximo que o pod terá de recurso (a depender quanto de recurso o node ainda possui)
              cpu: 500m
              memory: 25Mi

          # Verifica quando a aplicação fica pronta para iniciar o processo, o readiness e liveness aguarda o startup
          startupProbe:
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 3
            failureThreshold: 30

        # Verficando se sua aplicação está pronta para receber tráfego
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 3
            failureThreshold: 1

          # Verificando a saúde da sua applicação
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 5
            failureThreshold: 3
            timeoutSeconds: 1
            successThreshold: 1
          
          envFrom:
          - configMapRef:
              name: goserver-env
          - secretRef:
              name: goserver-secret

          volumeMounts:
            - mountPath: "app/myfriend"
              name: config
              readOnly: true
            - mountPath: "app/pvc"
              name: goserver-volume
            
      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc
        - name: config
          configMap:
            name: configmap-friends
            items:
              - key: members
                path: "friends.txt"
         
          # Método 2 - Trazendo todas variáveis de uma única vez
          # envFrom:
          #   - configMapRef:
          #       name: goserver-env
        
          #Método 1 - Trazendo variavel por variável
          # env: 
          #   - name: NAME
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: NAME
          #   - name: AGE
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: AGE
    